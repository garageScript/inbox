<%- include('./partials/head') %>

<body>
  <h1>Mailbox </h1>
  <div id="buttons">
    <button id="write"><i class="fas fa-pen"></i> New Mail</button>
    <button id="refresh"><i class="fas fa-sync-alt"></i> Refresh</button>
    <button id="logout"><i class="fas fa-sign-out-alt"></i> Logout</button>
  </div>
  <div id="container">
    <div id="container-accounts" class="container"></div>
    <div id="container-mails" class="container"></div>
  </div>
</body>

<script src="https://kit.fontawesome.com/0472eae8e7.js"></script>

<script>
  document.getElementById("logout").addEventListener("click", () => {
    fetch("/admin", { method: "DELETE" }).then((r) => {
      location.href = "/"
    })
  })

  document.getElementById("refresh").addEventListener("click", () => {
    start()
  })

  const container_accounts = document.getElementById("container-accounts")
  const container_mails = document.getElementById("container-mails")

  const renderAccount = (account) => {
    const head = document.createElement("h3")
    container_accounts.append(head)
    head.classList.add("cursor", "tag")
    head.innerText = account.split("@")[0]
    fetch(`/api/unreadNo/${account}`).then(r => r.json()).then((r) => {
      if (r) {
        const number = document.createElement("div")
        number.classList.add("numberBall")
        number.innerText = r
        head.append(number)
      }
    })
    let working
    let data
    head.addEventListener("click", () => {
      if (head.classList.contains("clicked")) return
      if (working) return
      working = true
      document.querySelectorAll(".clicked").forEach((e) => {
        e.classList.remove("clicked")
        e.classList.add("cursor")
      })
      head.classList.add("clicked")
      head.classList.remove("cursor")
      container_mails.style.top = (0 - container_mails.offsetHeight) + "px"
      container_mails.classList.add("clipped")
      const showMails = (r) => {
        data = r
        document.querySelectorAll(".mailcard").forEach((e) => e.remove())
        r.forEach(renderMail)
        container_mails.style.top = (0 - container_mails.offsetHeight) + "px"
        setTimeout(() => {
          container_mails.style.top = 0
          container_mails.classList.remove("clipped")
          working = false
        }, 140)
      }
      setTimeout(() => {
        if (!data) {
          return fetch(`/api/mails/${account}`).then(r => r.json()).then((r) => {
            showMails(r)
          })
        }
        showMails(data)
      }, 140)
    })
  }

  const renderMail = (e) => {
    const element = document.createElement("blockquote")
    element.classList.add("mailcard")
    container_mails.prepend(element)
    const headerBox = document.createElement("div")
    element.append(headerBox)
    const header = document.createElement("div")
    header.classList.add("header", "cursor")
    header.innerHTML = `
      <p class="mailcard-date content">${new Date(e.date)}</p>
      <p class="mailcard-from content">${e.from.text.replace("<", "&lt;").replace(">", "&gt;")}</p>
      <p class="mailcard-subject content">${e.subject}</p>
    `
    headerBox.append(header)
    const text = document.createElement("iframe")
    text.classList.add("hide", "text")
    text.srcdoc = `
    <div style="padding: 1rem;">
      ${e.html}
    </div>
    <link href="//fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&amp;subset=latin" rel="stylesheet">
    <style>
      body {
        margin: 0;
        overflow-y: hidden;
      }
      * {
        font-family: 'Open Sans';
        font-weight: 100;
        color: rgb(50,50,50);
      }
    </style>
    `
    text.style.height = 0 
    element.append(text)
    header.addEventListener("click", () => {
      if (text.classList.contains("hide")) {
        if (!e.read) fetch(`/api/markRead/${e.id}`)
        document.querySelectorAll(".text").forEach((e) => {
          if (e === text) return
          e.style.height = 0
          setTimeout(() => {
            e.classList.add("hide")
          }, 130)
        })
        setTimeout(() => {
          text.classList.remove("hide")
          text.style.height = (text.contentWindow.document.body.scrollHeight) + 'px';
        }, 130)
        return
      }
      text.style.height = 0
      setTimeout(() => {
        text.classList.add("hide")
      }, 130)
    })
    const actionBox = document.createElement("div")
    actionBox.classList.add("actionBox")
    headerBox.append(actionBox)
    const trashBox = document.createElement("div")
    trashBox.classList.add("iconBox")
    const trash = document.createElement("i")
    trash.classList.add("fas", "fa-trash", "cursor")
    trashBox.prepend(trash)
    actionBox.prepend(trashBox)
    trash.addEventListener("click", () => {
      event.stopPropagation()
      const sure = confirm("Do you want to delete this mail?")
      if (sure) {
        fetch(`/api/mails/${e.id}`, { method: "DELETE" }).then((r) => {
          element.remove()
        })
      }
    })
    const replyBox = document.createElement("div")
    replyBox.classList.add("iconBox")
    const reply = document.createElement("i")
    reply.classList.add("fas", "fa-reply", "cursor")
    replyBox.prepend(reply)
    actionBox.prepend(replyBox)
    reply.addEventListener("click", () => {})
  }

  const start = () => {
    document.querySelectorAll(".tag").forEach((e) => e.remove())
    document.querySelectorAll(".mailcard").forEach((e) => e.remove())
    fetch("/api/accounts").then(r => r.json()).then((r) => r.forEach(renderAccount))
  }

  start()
</script>

<%- include('./partials/style') %>

<style>
  iframe {
    background-color: rgb(230,230,230);
    box-sizing: border-box;
    width: 100%;
    border: none;
    overflow-x: scroll;
    margin-top: 1rem;
    transition: 0.2s;
  }
  
  i {
    font-size: 20px;
    transition: 0.1s;
  }
  i.cursor:hover {
    font-size: 24px;
  }

  #container-mails {
    position: relative;
    transition: 150ms;
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
  #container-mails.clipped {
    clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0 100%);
  }
  
  #buttons {
    position: absolute;
    top: 2.5rem;
    right: 1rem;
  }
  button > i {
    font-size: 10px;
  }

  .content {
    margin: 0;
  }
  .tag {
    position: relative;
    display: inline-block;
    padding: 0.5rem;
    margin-right: 1rem;
    border-radius: 5px;
    background-color: rgb(100,100,100);
    color: white;
  }
  .tag:hover {
    background-color: rgb(80,80,80);
  }
  .tag:active {
    background-color: rgb(60,60,60);
  }
  .tag.clicked {
    background-color: rgb(70,70,70);
  }
  .numberBall {
    position: absolute;
    top: -5px;
    right: -10px;
    font-size: 16px;
    display: inline-block;
    padding-left: 6px;
    padding-right: 6px;
    padding-bottom: 1px;
    text-align: center;
    line-height: 19px;
    border-radius: 10px;
    background-color: rgb(200,20,20);
    color: white; 
  }

  .headerBox {
    position: relative;
  }
  .actionBox {
    position: absolute;
    display: inline-block;
    width: 2rem;
    text-align: center;
    right: 1rem;
  }
  .header {
    display: inline-block;
    width: calc(100% - 2.5rem);
  }
  .iconBox {
    margin: auto;
    margin-bottom: 1rem;
    height: 25px;
    width: 25px;
    line-height: 25px;
    text-align: center;
  }

  .cursor, .cursor > * {
    cursor: pointer;
  }
  .hide {
    display: none;
  }
  .mailcard-from {
    margin-top: 1rem;
  }
</style>

