name: Docker Image CI

on:
  push:
    branches: ["main"]

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    outputs:
      secrets-exist: ${{ steps.check-secrets-step.outputs.defined }}
    steps:
      - name: Check for Secret availability
        id: check-secrets-step
        shell: bash
        run: |
          if [[ '${{ secrets.DOCKER_HUB_USERNAME }}' != '' && '${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}' != '' && '${{ secrets.DEPLOY_URL }}' != '' && '${{ secrets.DEPLOY_SECRET }}' != '' ]]; then
            echo "defined=true" >> $GITHUB_OUTPUT;
          else
            echo "defined=false" >> $GITHUB_OUTPUT;
          fi

  build:
    needs: check-secrets
    runs-on: ubuntu-latest
    if: needs.check-secrets.outputs.secrets-exist == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/inbox:latest

  deploy:
    needs: [check-secrets, build]

    runs-on: ubuntu-latest
    if: needs.check-secrets.outputs.secrets-exist == 'true'

    steps:
      - name: Trigger deploy
        run: |
          curl -X POST ${{ secrets.DEPLOY_URL }} -H "Content-Type: application/json" -d '{"secret": "${{ secrets.DEPLOY_SECRET }}"}'
